// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ITRD.proto

package main

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BrokerClientRequest struct {
	AccountId            string   `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	AccountName          string   `protobuf:"bytes,2,opt,name=accountName,proto3" json:"accountName,omitempty"`
	Position             string   `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Order                string   `protobuf:"bytes,4,opt,name=order,proto3" json:"order,omitempty"`
	Trade                string   `protobuf:"bytes,5,opt,name=trade,proto3" json:"trade,omitempty"`
	ErrMsg               string   `protobuf:"bytes,6,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrokerClientRequest) Reset()         { *m = BrokerClientRequest{} }
func (m *BrokerClientRequest) String() string { return proto.CompactTextString(m) }
func (*BrokerClientRequest) ProtoMessage()    {}
func (*BrokerClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d88c545b18eb0c5, []int{0}
}

func (m *BrokerClientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrokerClientRequest.Unmarshal(m, b)
}
func (m *BrokerClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrokerClientRequest.Marshal(b, m, deterministic)
}
func (m *BrokerClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrokerClientRequest.Merge(m, src)
}
func (m *BrokerClientRequest) XXX_Size() int {
	return xxx_messageInfo_BrokerClientRequest.Size(m)
}
func (m *BrokerClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BrokerClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BrokerClientRequest proto.InternalMessageInfo

func (m *BrokerClientRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *BrokerClientRequest) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *BrokerClientRequest) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *BrokerClientRequest) GetOrder() string {
	if m != nil {
		return m.Order
	}
	return ""
}

func (m *BrokerClientRequest) GetTrade() string {
	if m != nil {
		return m.Trade
	}
	return ""
}

func (m *BrokerClientRequest) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type ConsoleResponse struct {
	Rsp                  string   `protobuf:"bytes,1,opt,name=rsp,proto3" json:"rsp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsoleResponse) Reset()         { *m = ConsoleResponse{} }
func (m *ConsoleResponse) String() string { return proto.CompactTextString(m) }
func (*ConsoleResponse) ProtoMessage()    {}
func (*ConsoleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d88c545b18eb0c5, []int{1}
}

func (m *ConsoleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsoleResponse.Unmarshal(m, b)
}
func (m *ConsoleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsoleResponse.Marshal(b, m, deterministic)
}
func (m *ConsoleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsoleResponse.Merge(m, src)
}
func (m *ConsoleResponse) XXX_Size() int {
	return xxx_messageInfo_ConsoleResponse.Size(m)
}
func (m *ConsoleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsoleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsoleResponse proto.InternalMessageInfo

func (m *ConsoleResponse) GetRsp() string {
	if m != nil {
		return m.Rsp
	}
	return ""
}

func init() {
	proto.RegisterType((*BrokerClientRequest)(nil), "main.BrokerClientRequest")
	proto.RegisterType((*ConsoleResponse)(nil), "main.ConsoleResponse")
}

func init() { proto.RegisterFile("ITRD.proto", fileDescriptor_2d88c545b18eb0c5) }

var fileDescriptor_2d88c545b18eb0c5 = []byte{
	// 227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xcd, 0x4a, 0x03, 0x31,
	0x14, 0x85, 0x1d, 0xdb, 0x0e, 0xf6, 0x56, 0x50, 0xae, 0x3f, 0xc4, 0xe2, 0xa2, 0x8c, 0x1b, 0x57,
	0xb3, 0xd0, 0x37, 0x68, 0xdd, 0x74, 0xa1, 0x60, 0xf0, 0x05, 0x62, 0xe7, 0x22, 0xc1, 0x36, 0x37,
	0xde, 0xa4, 0x8f, 0xe6, 0xfb, 0x49, 0x32, 0x41, 0x07, 0xe9, 0x2e, 0xdf, 0x77, 0x02, 0xc9, 0x39,
	0x00, 0xeb, 0x37, 0xfd, 0xd4, 0x7a, 0xe1, 0xc8, 0x38, 0xde, 0x19, 0xeb, 0x9a, 0xef, 0x0a, 0x2e,
	0x96, 0xc2, 0x9f, 0x24, 0xab, 0xad, 0x25, 0x17, 0x35, 0x7d, 0xed, 0x29, 0x44, 0xbc, 0x85, 0xa9,
	0xd9, 0x6c, 0x78, 0xef, 0xe2, 0xba, 0x53, 0xd5, 0xa2, 0xba, 0x9f, 0xea, 0x3f, 0x81, 0x0b, 0x98,
	0x15, 0x78, 0x31, 0x3b, 0x52, 0xc7, 0x39, 0x1f, 0x2a, 0x9c, 0xc3, 0x89, 0xe7, 0x60, 0xa3, 0x65,
	0xa7, 0x46, 0x39, 0xfe, 0x65, 0xbc, 0x84, 0x09, 0x4b, 0x47, 0xa2, 0xc6, 0x39, 0xe8, 0x21, 0xd9,
	0x28, 0xa6, 0x23, 0x35, 0xe9, 0x6d, 0x06, 0xbc, 0x86, 0x9a, 0x44, 0x9e, 0xc3, 0x87, 0xaa, 0xb3,
	0x2e, 0xd4, 0xdc, 0xc1, 0xd9, 0x8a, 0x5d, 0xe0, 0x2d, 0x69, 0x0a, 0x9e, 0x5d, 0x20, 0x3c, 0x87,
	0x91, 0x04, 0x5f, 0x3e, 0x9b, 0x8e, 0x0f, 0xaf, 0x30, 0x4b, 0x85, 0xcb, 0x45, 0x5c, 0xc2, 0xe9,
	0xb0, 0x2a, 0xde, 0xb4, 0x69, 0x82, 0xf6, 0x40, 0xfd, 0xf9, 0x55, 0x1f, 0xfd, 0x7b, 0xa2, 0x39,
	0x7a, 0xaf, 0xf3, 0x78, 0x8f, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x01, 0x1e, 0xdd, 0xaf, 0x4a,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ITRDConsoleClient is the client API for ITRDConsole service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ITRDConsoleClient interface {
	BrokerClient(ctx context.Context, in *BrokerClientRequest, opts ...grpc.CallOption) (*ConsoleResponse, error)
}

type iTRDConsoleClient struct {
	cc *grpc.ClientConn
}

func NewITRDConsoleClient(cc *grpc.ClientConn) ITRDConsoleClient {
	return &iTRDConsoleClient{cc}
}

func (c *iTRDConsoleClient) BrokerClient(ctx context.Context, in *BrokerClientRequest, opts ...grpc.CallOption) (*ConsoleResponse, error) {
	out := new(ConsoleResponse)
	err := c.cc.Invoke(ctx, "/main.ITRDConsole/BrokerClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ITRDConsoleServer is the server API for ITRDConsole service.
type ITRDConsoleServer interface {
	BrokerClient(context.Context, *BrokerClientRequest) (*ConsoleResponse, error)
}

// UnimplementedITRDConsoleServer can be embedded to have forward compatible implementations.
type UnimplementedITRDConsoleServer struct {
}

func (*UnimplementedITRDConsoleServer) BrokerClient(ctx context.Context, req *BrokerClientRequest) (*ConsoleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BrokerClient not implemented")
}

func RegisterITRDConsoleServer(s *grpc.Server, srv ITRDConsoleServer) {
	s.RegisterService(&_ITRDConsole_serviceDesc, srv)
}

func _ITRDConsole_BrokerClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BrokerClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ITRDConsoleServer).BrokerClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.ITRDConsole/BrokerClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ITRDConsoleServer).BrokerClient(ctx, req.(*BrokerClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ITRDConsole_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.ITRDConsole",
	HandlerType: (*ITRDConsoleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BrokerClient",
			Handler:    _ITRDConsole_BrokerClient_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ITRD.proto",
}
